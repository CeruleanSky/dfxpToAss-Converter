"""convert dfxp files to ass"""
import argparse
import os.path
import timeit
from bs4 import BeautifulSoup as bs

__author__ = 'EngelEatos'

header =  '''[Script Info]
; Script generated by Aegisub 3.0.4
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
PlayResX: 1920
PlayResY: 1080
ScaledBorderAndShadow: yes
Video Zoom: 6
Scroll Position: 828
Active Line: 748
YCbCr Matrix: TV.601
Video Zoom Percent: 1
Aegisub Scroll Position: 81
Aegisub Active Line: 87
Aegisub Video Zoom Percent: 1.000000

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Chinacat,68,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,1.5,2,15,15,15,1
Style: Main Dialog,Chinacat,68,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,1.5,2,15,15,15,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
'''

def sec2time(sec, n_msec=4):
    ''' Convert seconds to 'D days, HH:MM:SS.FFF' '''
    #if hasattr(sec,'__len__'):
    #   return [sec2time(s) for s in sec]
    if sec < 0:
        sec = 0
    m, s = divmod(sec, 60)
    h, m = divmod(m, 60)
    d, h = divmod(h, 24)
    if n_msec > 0:
        pattern = '%%02d:%%02d:%%0%d.%df' % (n_msec+3, n_msec)
    else:
        pattern = r'%02d:%02d:%02d'
    if d == 0:
        return pattern % (h, m, s)
    return ('%d days, ' + pattern) % (d, h, m, s)


def is_valid_file(parser, arg, ext):
    """check if provided file meets requirements"""
    if not os.path.exists(arg) or not os.path.isfile(arg):
        parser.error("The file %s does not exist!" % arg)
    f_ext = arg[arg.rfind('.') + 1:]
    if f_ext != ext:
        parser.error(
            "Wrong file extension. required '%s', found '%s'" % ext, f_ext)
    return arg

def main():
    """main"""
    print("Coded by " + __author__)
    parser = argparse.ArgumentParser(description="convert dfxp to ass")
    parser.add_argument("-i", dest="input", required=True, help="input dfxp file",
                        metavar="FILE", type=lambda x: is_valid_file(parser, x, "dfxp"))
    parser.add_argument("-o", dest="output", required=True, help="output ass file",
                        metavar="FILE")
    args = parser.parse_args()
    with open(args.input, 'r') as input_file:
        ass = input_file.read()
    soup = bs(ass, 'html.parser')
    p_elements = soup.find('tt', attrs={'xml:lang': 'en'}).find_all('p')
    with open(args.output, 'w+') as output_file:
        output_file.write(str(header))
        for element in p_elements:
            output = "Dialogue: 0,%s,%s,Main Dialog,,0,0,0,Banner;0,%s\n" % (
                sec2time(float(element.get('begin'))),
                sec2time(float(element.get('end'))),
                " ".join(element.text.lstrip().strip().replace("\n", '').split()))
            output_file.write(output)

if __name__ == '__main__':
    print("finished in %.10fs" % timeit.timeit(main, number=1))
